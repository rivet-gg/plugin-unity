/*
 * Open Game Backend
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Backend.Client.OpenAPIDateConverter;

namespace Backend.Model.Lobbies
{
    /// <summary>
    /// CreateResponseLobbyBackendServer
    /// </summary>
    [DataContract(Name = "lobbies__create__Response_lobby_backend_server")]
    public partial class CreateResponseLobbyBackendServer
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateResponseLobbyBackendServer" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateResponseLobbyBackendServer() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateResponseLobbyBackendServer" /> class.
        /// </summary>
        /// <param name="serverId">serverId (required).</param>
        /// <param name="ports">ports.</param>
        public CreateResponseLobbyBackendServer(string serverId = default(string), Object ports = default(Object))
        {
            // to ensure "serverId" is required (not null)
            if (serverId == null)
            {
                throw new ArgumentNullException("serverId is a required property for CreateResponseLobbyBackendServer and cannot be null");
            }
            this.ServerId = serverId;
            this.Ports = ports;
        }

        /// <summary>
        /// Gets or Sets ServerId
        /// </summary>
        [DataMember(Name = "serverId", IsRequired = true, EmitDefaultValue = true)]
        public string ServerId { get; set; }

        /// <summary>
        /// Gets or Sets Ports
        /// </summary>
        [DataMember(Name = "ports", EmitDefaultValue = false)]
        public Object Ports { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateResponseLobbyBackendServer {\n");
            sb.Append("  ServerId: ").Append(ServerId).Append("\n");
            sb.Append("  Ports: ").Append(Ports).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
