/*
 * Open Game Backend
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Backend.Client.OpenAPIDateConverter;

namespace Backend.Model.Users
{
    /// <summary>
    /// AuthenticateTokenRequest
    /// </summary>
    [DataContract(Name = "users__authenticate_token__Request")]
    public partial class AuthenticateTokenRequest
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AuthenticateTokenRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AuthenticateTokenRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AuthenticateTokenRequest" /> class.
        /// </summary>
        /// <param name="userToken">userToken (required).</param>
        /// <param name="fetchUser">fetchUser.</param>
        public AuthenticateTokenRequest(string userToken = default(string), bool fetchUser = default(bool))
        {
            // to ensure "userToken" is required (not null)
            if (userToken == null)
            {
                throw new ArgumentNullException("userToken is a required property for AuthenticateTokenRequest and cannot be null");
            }
            this.UserToken = userToken;
            this.FetchUser = fetchUser;
        }

        /// <summary>
        /// Gets or Sets UserToken
        /// </summary>
        [DataMember(Name = "userToken", IsRequired = true, EmitDefaultValue = true)]
        public string UserToken { get; set; }

        /// <summary>
        /// Gets or Sets FetchUser
        /// </summary>
        [DataMember(Name = "fetchUser", EmitDefaultValue = true)]
        public bool FetchUser { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AuthenticateTokenRequest {\n");
            sb.Append("  UserToken: ").Append(UserToken).Append("\n");
            sb.Append("  FetchUser: ").Append(FetchUser).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
